{
	"info": {
		"_postman_id": "1cdd7e9d-d2c6-4b80-8934-924c9db344d4",
		"name": "Collection1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21477240"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "GET User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Hello World\");",
									"let urlVar = pm.variables.get(\"url\");",
									"console.log(\"The value of URL is : \"+urlVar);",
									"",
									"pm.variables.set(\"name\", \"POSTMAN\");",
									"console.log(pm.variables.get(\"name\"));",
									"",
									"console.log(pm.globals.get(\"env\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log(\"I am the pre-req. script\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET UserList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/users?page=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ScriptTest",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.get(\"variable_key\");",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
									"    console.log(response.json());",
									"});",
									"pm.environment.set(\"variable_key\", \"variable_value\");",
									"pm.environment.unset(\"variable_key\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "User Registration",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/{{endpoint}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{endpoint}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Hello World\");",
					"let urlVar = pm.variables.get(\"url\");",
					"console.log(\"The value of URL is : \"+urlVar);",
					"",
					"pm.variables.set(\"name\", \"POSTMAN\");",
					"console.log(pm.variables.get(\"name\"));",
					"",
					"console.log(pm.globals.get(\"env\"));",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://reqres.in",
			"type": "string"
		}
	]
}